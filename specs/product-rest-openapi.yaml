components:
    schemas:
        Product:
            description: Product
            properties:
                id:
                    type: string
                    example: 15a51874-04e6-4db3-9926-ca9b5c7d0aea
                name:
                    type: string
                weight:
                    type: number
                    format: double
                serviceAddress:
                    type: string
info:
    description: "Product REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "ProductRest"
    version: v1.0
openapi: 3.0.1

paths:
    "/products":
        get:
            tags: ["Product"]
            description:
                Retrieves the Products. Results can be paginated, filtered, searched, and sorted.
            operationId: getProducts
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    description: The data returned
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
        post:
            tags: ["Product"]
            description: Create new a Product
            operationId: postProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Product"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Product"
            responses:
                201:
                    description:
                        "Create a Product"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
    "/products/{productId}":
        put:
            tags: ["Product"]
            description: Update a Product
            operationId: putProduct
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Product"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Product"
            responses:
                200:
                    description:
                        "Update an Product"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
        get:
            tags: ["Product"]
            description: Get a Product
            operationId: getProduct
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: delay
                  schema:
                      type: integer
                      format: int32
                  required: false
                - in: query
                  name: faultPercent
                  schema:
                      type: integer
                      format: int32
                  required: false
            responses:
                200:
                    description:
                        "Update an Product"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
        delete:
            tags: ["Product"]
            description: Delete a Product
            operationId: deleteProduct
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description:
                        "Update an Product"
                    content:
                        application/json: {}
                        application/xml: {}