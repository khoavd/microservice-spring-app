spring:
    jpa:
        defer-datasource-initialization: true
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                jdbc:
                    lob:
                        non_contextual_creation: true
    sql:
        init:
            mode: always

    r2dbc:
        password: 123456
        url: r2dbc:postgresql://localhost:5432/dg_office
        username: dev
server:
    port: 7003

spring.cloud.function.definition: messageProcessor

spring.cloud.stream:
    default.contentType: application/json
    bindings.messageProcessor-in-0:
        destination: recommendations
        group: recommendationsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
    maxAttempts: 3
    backOffInitialInterval: 500
    backOffMaxInterval: 1000
    backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
    autoBindDlq: true
    republishToDlq: true

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
    enableDlq: true

logging:
    level:
        root: INFO
        com.dogoo: INFO
        #org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG
        io.r2dbc.postgresql.QUERY: DEBUG # for queries
        io.r2dbc.postgresql.PARAM: DEBUG
---
spring:
    config:
        activate:
            on-profile: docker

server:
    port: 8080


---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2

---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1
