group = 'com.dogoo.ecommerce.product.composite.service'
version = '0.0.1-SNAPSHOT'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'

	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

	implementation(project(':app-apis:product-composite-api'))
	implementation(project(':app-apis:product-client'))
	implementation(project(':app-apis:review-client'))
	implementation(project(':app-apis:recommendation-client'))

	implementation (group: 'com.dogoo.common.lib', name: 'common-lib', version: '1.0.2', classifier: 'plain')
	implementation (group: 'com.dogoo.exception.handler', name: 'exceptions-handler', version: '1.0.6', classifier: 'plain')
	implementation (group: 'com.dogoo.jwt.webflux.lib', name: 'jwt-weblux-lib', version: '1.0.9', classifier: 'plain')

	modules {
		module("org.springframework.boot:spring-boot-starter-tomcat") {
			replacedBy("org.springframework.boot:spring-boot-starter-jetty")
		}
	}

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar {
	enabled = true
}

springBoot {
	buildInfo()
}

tasks.named('test') {
	useJUnitPlatform()
}